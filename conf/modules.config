/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
	publishDir       = [
            [
                path: { "${params.outdir}/QCreports/FastQC/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*{html,zip}"
            ]
        ]
    }

    withName: 'NFCORE_HEISENBIO:HEISENBIO:CRAM_QC_NO_MD:SAMTOOLS_STATS' {
        ext.when         = { !(params.skip_tools && params.skip_tools.split(',').contains('samtools')) }
        ext.prefix       = { "${meta.id}.sorted.cram" }
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/QCreports/samtools/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MOSDEPTH' {
        ext.args = { !params.wes ? "-n --fast-mode --by 500" : ""}
        ext.prefix       = {
            if (params.tools && params.tools.split(',').contains('sentieon_dedup')) {
                "${meta.id}.dedup"
            } else if (params.skip_tools && params.skip_tools.split(',').contains('markduplicates')) {
                "${meta.id}.sorted"
            } else {
                "${meta.id}.md"
            }
        }
        ext.when         = { !(params.skip_tools && params.skip_tools.split(',').contains('mosdepth')) }
        publishDir = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/QCreports/mosdepth/${meta.id}" },
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    if ((params.step == 'alignment' || params.step == 'markduplicates'|| params.step == 'prepare_recalibration'|| params.step == 'recalibrate') && (!(params.skip_tools && params.skip_tools.split(',').contains('baserecalibrator')))) {
        withName: 'NFCORE_HEISENBIO:HEISENBIO:CRAM_QC_RECAL:MOSDEPTH' {
            ext.prefix       = { "${meta.id}.recal" }
        }

        withName: 'NFCORE_HEISENBIO:HEISENBIO:CRAM_QC_RECAL:SAMTOOLS_STATS' {
            ext.prefix       = { "${meta.id}.recal.cram" }
            ext.when         = { !(params.skip_tools && params.skip_tools.split(',').contains('samtools')) }
            publishDir       = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/QCreports/samtools/${meta.id}" },
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
